const fetch = require('node-fetch');

const testLocalInterpretation = async () => {
  console.log('Testing local tarot interpretation API...\n');

  const testData = {
    question: 'Ïò§ÎäòÏùò Ïö¥ÏÑ∏',
    cardSpread: 'ÏÇºÏúÑÏùºÏ≤¥ Ï°∞Îßù (Trinity View)',
    cardInterpretations: `Page of Cups (Ïªµ ÏãúÏ¢Ö) (Í≥ºÍ±∞) (Ïó≠Î∞©Ìñ•): Í∞êÏ†ïÏ†ÅÏúºÎ°ú ÎØ∏ÏàôÌïòÍ±∞ÎÇò, ÌòÑÏã§ÏùÑ Ïô∏Î©¥ÌïòÎ†§Îäî Í≤ΩÌñ•
2 of Cups (Ïªµ 2) (ÌòÑÏû¨) (Ïó≠Î∞©Ìñ•): Í¥ÄÍ≥ÑÏóêÏÑúÏùò Î∂àÌòëÌôîÏùåÏù¥ÎÇò ÏÜåÌÜµ Î∂ÄÏ°±  
10 of Pentacles (ÌéúÌÉÄÌÅ¥ 10) (ÎØ∏Îûò) (Ï†ïÎ∞©Ìñ•): Î¨ºÏßàÏ†Å ÌíçÏöîÏôÄ Í∞ÄÏ°±Ïùò ÌôîÌï©, ÏÑ±Ï∑®Ïùò ÏôÑÏÑ±`,
    isGuestUser: false,
    spreadId: 'trinity-view',
    styleId: 'spiritual-growth-reflection'
  };

  try {
    console.log('Sending request to local API...');
    console.log('URL: http://localhost:4000/api/generate-tarot-interpretation');
    console.log('Data:', JSON.stringify(testData, null, 2));
    
    const response = await fetch('http://localhost:4000/api/generate-tarot-interpretation', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData),
      timeout: 60000
    });

    console.log('\nResponse status:', response.status);
    
    if (!response.ok) {
      const errorText = await response.text();
      console.error('API Error:', errorText);
      return;
    }

    const result = await response.json();
    
    console.log('\n=== INTERPRETATION RESULT ===');
    console.log('Length:', result.interpretation?.length || 0, 'characters');
    
    if (result.interpretation) {
      console.log('\nContent Preview:');
      console.log(result.interpretation.substring(0, 500) + '...\n');
      
      // Check for guideline integration
      const interpretation = result.interpretation;
      const hasSpreadRef = interpretation.includes('ÏÇºÏúÑÏùºÏ≤¥') || interpretation.includes('Trinity') || interpretation.includes('Ï°∞Îßù');
      const hasPositionRef = interpretation.includes('Í≥ºÍ±∞') && interpretation.includes('ÌòÑÏû¨') && interpretation.includes('ÎØ∏Îûò');
      const hasSpiritualRef = interpretation.includes('ÏòÅÏ†Å') || interpretation.includes('ÏòÅÌòº') || interpretation.includes('ÏÑ±Ïû•');
      const hasDetailedAnalysis = interpretation.length > 500;
      const hasPositionSpecific = interpretation.includes('Ïî®Ïïó') || interpretation.includes('Í±∞Ïö∏') || interpretation.includes('ÍΩÉÌîºÏõÄ');
      
      console.log('=== GUIDELINE VERIFICATION ===');
      console.log('‚úÖ Spread reference found:', hasSpreadRef);
      console.log('‚úÖ Position references found:', hasPositionRef);  
      console.log('‚úÖ Spiritual growth elements:', hasSpiritualRef);
      console.log('‚úÖ Detailed analysis (>500 chars):', hasDetailedAnalysis);
      console.log('‚úÖ Position-specific guidance:', hasPositionSpecific);
      
      if (hasSpreadRef && hasPositionRef && hasSpiritualRef && hasDetailedAnalysis) {
        console.log('\nüéâ SUCCESS: Rich guidelines are working properly!');
      } else {
        console.log('\n‚ö†Ô∏è WARNING: Some guideline elements may be missing');
      }
      
      console.log('\n=== FULL INTERPRETATION ===');
      console.log(result.interpretation);
    } else {
      console.log('No interpretation in response:', result);
    }
    
  } catch (error) {
    console.error('Test error:', error.message);
  }
};

testLocalInterpretation();