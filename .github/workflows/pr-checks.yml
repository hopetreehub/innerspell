name: PR Quality Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write
  issues: write
  checks: write

jobs:
  # Enforce PR conventions
  pr-quality:
    name: PR Quality Gates
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          # Check if PR title follows conventional commits
          if ! echo "$PR_TITLE" | grep -qE "^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .+"; then
            echo "❌ PR title doesn't follow conventional commits format"
            echo "Expected format: <type>(<scope>): <subject>"
            echo "Example: feat(auth): add login functionality"
            exit 1
          fi

      - name: Check PR size
        run: |
          # Get the number of lines changed
          LINES_CHANGED=$(git diff --shortstat origin/${{ github.base_ref }}...HEAD | awk '{print $4 + $6}')
          
          if [ "$LINES_CHANGED" -gt 1000 ]; then
            echo "⚠️  Large PR detected: $LINES_CHANGED lines changed"
            echo "Consider breaking this PR into smaller, more focused changes"
          fi

      - name: Check for merge conflicts
        run: |
          git fetch origin ${{ github.base_ref }}
          if ! git merge-tree $(git merge-base HEAD origin/${{ github.base_ref }}) HEAD origin/${{ github.base_ref }} | grep -q "<<<<<<< "; then
            echo "✅ No merge conflicts detected"
          else
            echo "❌ Merge conflicts detected. Please resolve conflicts before merging."
            exit 1
          fi

  # Security audit
  security:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run audit-ci
        run: npx audit-ci --high
        continue-on-error: true

  # Label PRs automatically
  label:
    name: Auto Label PR
    runs-on: ubuntu-latest
    steps:
      - name: Label based on files changed
        uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"