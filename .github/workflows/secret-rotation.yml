name: Secret Rotation

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run mode'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: write
  issues: write
  secrets: write

jobs:
  check-rotation:
    runs-on: ubuntu-latest
    outputs:
      needs_rotation: ${{ steps.check.outputs.needs_rotation }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -D ts-node @types/node
          npm install -D typescript

      - name: Check rotation status
        id: check
        run: |
          cd security/scripts
          if npx ts-node rotate-secrets.ts check; then
            echo "needs_rotation=false" >> $GITHUB_OUTPUT
          else
            echo "needs_rotation=true" >> $GITHUB_OUTPUT
          fi

      - name: Generate rotation report
        run: |
          cd security/scripts
          npx ts-node rotate-secrets.ts report
          
      - name: Upload rotation report
        uses: actions/upload-artifact@v4
        with:
          name: rotation-report
          path: security/docs/rotation-report.md

  rotate-secrets:
    needs: check-rotation
    if: needs.check-rotation.outputs.needs_rotation == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -D ts-node @types/node
          npm install -D typescript

      - name: Configure GitHub CLI
        run: |
          gh auth setup-git
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Rotate secrets
        run: |
          cd security/scripts
          if [ "${{ github.event.inputs.dry_run }}" == "false" ]; then
            npx ts-node rotate-secrets.ts rotate --execute
          else
            npx ts-node rotate-secrets.ts rotate
          fi
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create rotation issue
        if: github.event.inputs.dry_run == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ”’ Secret Rotation Completed - ${date}`,
              body: `## Secret Rotation Summary
              
              The automated secret rotation has been completed.
              
              ### Actions Taken
              - Rotated expired secrets
              - Updated GitHub Secrets
              - Updated Vercel environment variables
              - Generated rotation report
              
              ### Next Steps
              1. Review the rotation report in the artifacts
              2. Test application functionality
              3. Update any manual configurations if needed
              
              cc @security-team`,
              labels: ['security', 'secret-rotation', 'automated']
            });

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check for exposed secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified